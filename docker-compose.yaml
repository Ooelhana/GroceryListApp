version: "3.2"
services:
  db:
    image: postgres:14.2-alpine
    volumes:
      - ./data/db:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
  backend:
    container_name: grocery_backend
    command: bash -c "python manage.py makemigrations &&
      python manage.py migrate &&
      python manage.py runserver 0.0.0.0:8000"
    build:
      context: ./grocery_backend/
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      - POSTGRES_NAME=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    depends_on:
      db:
        condition: service_healthy
  frontend:
    container_name: grocery_frontend
    build:
      context: ./grocery_frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
